--   -------------------------------------------------- 
--   Generated by Enterprise Architect Version 7.5.845
--   Created On : вторник, 14 Декабрь, 2010 
--   DBMS       : PostgreSQL 
--   -------------------------------------------------- 




--  Create Tables 
CREATE TABLE BAS_APP_MESSAGE ( 
	id serial NOT NULL,
	method_id bigint NOT NULL,
	node_id integer NOT NULL,
	datetime timestamp NOT NULL,
	sender_host varchar(50) NOT NULL,
	message_type integer NOT NULL,
	message bytea NOT NULL
)
;

CREATE TABLE BAS_APP_METHOD ( 
	method_id serial NOT NULL,
	application_id bigint NOT NULL,
	method_name varchar(255) NOT NULL,
	status smallint NOT NULL
)
;

CREATE TABLE BAS_APP_STATISTIC ( 
	id serial NOT NULL,
	app_id integer NOT NULL,
	node_id integer NOT NULL,
	write_datetime timestamp NOT NULL,
	in_count integer NOT NULL,
	out_count integer NOT NULL,
	err_count integer
)
;

CREATE TABLE BAS_APPLICATION ( 
	id serial NOT NULL,
	cluster_id integer NOT NULL,
	app_name varchar(50) NOT NULL,
	app_version varchar(20) NOT NULL,
	control_flag smallint,    --  DEPRECATED 
	active_flag smallint,
	deploy_datetime timestamp NOT NULL,
	execute_code bytea NOT NULL,
	app_type varchar(20) DEFAULT 1,    --  'native_app' - native python application 'shared_lib' - python shared library 
	status smallint DEFAULT 0 NOT NULL    --  DEPRECATED 
)
;
COMMENT ON COLUMN BAS_APPLICATION.control_flag
    IS 'DEPRECATED'
;
COMMENT ON COLUMN BAS_APPLICATION.app_type
    IS '''native_app'' - native python application ''shared_lib'' - python shared library'
;
COMMENT ON COLUMN BAS_APPLICATION.status
    IS 'DEPRECATED'
;

CREATE TABLE BAS_CLUSTER ( 
	id serial NOT NULL,
	cluster_name varchar(255) NOT NULL,
	cluster_sid varchar(100)
)
;

CREATE TABLE BAS_CLUSTER_NODE ( 
	id serial NOT NULL,
	cluster_id integer NOT NULL,
	hostname varchar(50) NOT NULL,
	logic_name varchar(255),
	datestart timestamp NOT NULL
)
;

CREATE TABLE BAS_CONFIG ( 
	id serial NOT NULL,
	config_type smallint DEFAULT 1 NOT NULL,    --  1 - system 2 - global (cluster) 3 - local (application) 
	config_object_id integer NOT NULL,    --  if config_type=1 and 2 --- cluster_id if config_type=3  --- application_id 
	param_name varchar(255) NOT NULL,
	param_type integer DEFAULT 1 NOT NULL,    --  1 - string 2 - integer 3 - boolean 4 - hidden string 
	param_value varchar(1024) NOT NULL,
	description varchar(1024)
)
;
COMMENT ON COLUMN BAS_CONFIG.config_type
    IS '1 - system 2 - global (cluster) 3 - local (application)'
;
COMMENT ON COLUMN BAS_CONFIG.config_object_id
    IS 'if config_type=1 and 2 --- cluster_id if config_type=3  --- application_id'
;
COMMENT ON COLUMN BAS_CONFIG.param_type
    IS '1 - string 2 - integer 3 - boolean 4 - hidden string'
;

CREATE TABLE BAS_LOG ( 
	id serial NOT NULL,
	node_id integer NOT NULL,
	msg_datetime timestamp NOT NULL,
	msg_level smallint NOT NULL,
	log_message varchar(1024) NOT NULL
)
;

CREATE TABLE BAS_ROLE ( 
	id serial NOT NULL,
	role_sid varchar(50) NOT NULL,
	role_name varchar(255) NOT NULL
)
;

CREATE TABLE BAS_USER ( 
	id serial NOT NULL,
	name varchar(255) NOT NULL,
	password_md5 varchar(35) NOT NULL
)
;

CREATE TABLE BAS_USER_ROLES ( 
	id serial NOT NULL,
	user_id bigint NOT NULL,
	role_id bigint NOT NULL
)
;


--  Create Primary Key Constraints 
ALTER TABLE BAS_APP_MESSAGE ADD CONSTRAINT PK_BAS_APP_MESSAGE 
	PRIMARY KEY (id)
;


ALTER TABLE BAS_APP_METHOD ADD CONSTRAINT PK_BAS_APP_METHOD 
	PRIMARY KEY (method_id)
;


ALTER TABLE BAS_APP_STATISTIC ADD CONSTRAINT PK_BAS_APP_STATISTIC 
	PRIMARY KEY (id)
;


ALTER TABLE BAS_APPLICATION ADD CONSTRAINT PK_BAS_APPLICATION 
	PRIMARY KEY (id)
;


ALTER TABLE BAS_CLUSTER ADD CONSTRAINT PK_BAS_CLUSTER 
	PRIMARY KEY (id)
;


ALTER TABLE BAS_CLUSTER_NODE ADD CONSTRAINT PK_BAS_CLUSTER_NODE 
	PRIMARY KEY (id)
;


ALTER TABLE BAS_CONFIG ADD CONSTRAINT PK_BAS_APPLICATION_CONFIG 
	PRIMARY KEY (id)
;


ALTER TABLE BAS_LOG ADD CONSTRAINT PK_BAS_LOG 
	PRIMARY KEY (id)
;


ALTER TABLE BAS_ROLE ADD CONSTRAINT PK_BAS_USER_ROLE 
	PRIMARY KEY (id)
;


ALTER TABLE BAS_USER ADD CONSTRAINT PK_BAS_USER 
	PRIMARY KEY (id)
;


ALTER TABLE BAS_USER_ROLES ADD CONSTRAINT PK_BAS_USER_ROLE 
	PRIMARY KEY (id)
;



--  Create Indexes 
ALTER TABLE BAS_CLUSTER
	ADD CONSTRAINT UQ_BAS_CLUSTER_cluster_sid UNIQUE (cluster_sid)
;
ALTER TABLE BAS_ROLE
	ADD CONSTRAINT UQ_ROLE_role_sid UNIQUE (role_sid)
;

--  Create Foreign Key Constraints 
ALTER TABLE BAS_APP_MESSAGE ADD CONSTRAINT FK_APP_MESSAGE_APP_METHOD 
	FOREIGN KEY (method_id) REFERENCES BAS_APP_METHOD (method_id)
;

ALTER TABLE BAS_APP_MESSAGE ADD CONSTRAINT FK_BAS_NODE_APP_MESSAGE 
	FOREIGN KEY (node_id) REFERENCES BAS_CLUSTER_NODE (id)
;

ALTER TABLE BAS_APP_STATISTIC ADD CONSTRAINT FK_BAS_APPICATION_STATISTIC 
	FOREIGN KEY (app_id) REFERENCES BAS_APPLICATION (id)
;

ALTER TABLE BAS_APP_STATISTIC ADD CONSTRAINT FK_BAS_CLUSTER_APP_STATISTIC 
	FOREIGN KEY (node_id) REFERENCES BAS_CLUSTER_NODE (id)
;

ALTER TABLE BAS_APPLICATION ADD CONSTRAINT FK_BAS_APPLICATION_CLUSTER 
	FOREIGN KEY (cluster_id) REFERENCES BAS_CLUSTER (id)
;

ALTER TABLE BAS_CLUSTER_NODE ADD CONSTRAINT FK_BAS_CLUSTER_NODE 
	FOREIGN KEY (cluster_id) REFERENCES BAS_CLUSTER (id)
;

ALTER TABLE BAS_LOG ADD CONSTRAINT FK_BAS_LOG_NODE 
	FOREIGN KEY (node_id) REFERENCES BAS_CLUSTER_NODE (id)
;

ALTER TABLE BAS_USER_ROLES ADD CONSTRAINT FK_BAS_ROLES_USER 
	FOREIGN KEY (user_id) REFERENCES BAS_USER (id)
;

ALTER TABLE BAS_USER_ROLES ADD CONSTRAINT FK_BAS_USERS_ROLE 
	FOREIGN KEY (role_id) REFERENCES BAS_ROLE (id)
;
