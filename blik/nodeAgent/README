
nodeAgent module should be installed on every node in cluster.
You should extend this module using plugins for operations performing.

Plugins directory should has following structure:
    plugins/
        __init__.py
        <some files>
        <some modules>

        <plugins group>/
            __init__.py
            <some files>
            <some modules>
        ...

Every __init__.py should contain OPERATIONS_PLUGINS dict. 
Keys of this dict should be operations names and values - 
plugin classes.

Every plugin class should be inherited from NodeAgentPlugin,
defined in agentPluginsManager.py module.

Example of plugin class:
#-------------------------------------------------------------------------------------------------
from blik.nodeAgent.agentPluginsManager import NodeAgentPlugin

class TestPlugin(NodeAgentPlugin):
    def process(self, parameters):
        try:
            #do some logic here...

            self.updateOperationProgress(10, ret_message='10 percents')
            time.sleep(1)
            self.updateOperationProgress(50, ret_message='50 percents of all operation work')
            time.sleep(3)
            self.updateOperationProgress(80, ret_message='80 percents')
            time.sleep(1)
            self.updateOperationProgress(100, ret_message='all steps are processed by PLUGIN!')
        except Exception, err:
            self.updateOperationProgress(70, ret_message='Error occured: %s'%err, ret_code=32)
#-------------------------------------------------------------------------------------------------


Example of OPERATIONS_PLUGINS dict:
#-------------------------------------------------------------------------------------------------
import testPluginsGroup
from fakePlugins import FakePlugin

OPERATIONS_PLUGINS={'TEST_OPERATION': testPluginsGroup.TestPlugin, 'SOME_OPERATION': FakePlugin} 
#-------------------------------------------------------------------------------------------------
